package com.pmarlen.caja.view;

import com.pmarlen.backend.model.Producto;
import com.pmarlen.caja.model.PedidoVentaDetalleTableItem;
import com.pmarlen.model.Constants;
import java.awt.Color;
import java.awt.Component;
import java.text.DecimalFormat;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author alfredo
 */
public class ProductoCellRender extends javax.swing.JPanel implements TableCellRenderer {
	private static DecimalFormat df = new DecimalFormat("$ ###,###,##0.00");
	private Color bgc;
	private Color fgc;
	private Color sbgc; 
	private Color sfgc;

	public void setColors(Color bgc, Color fgc, Color sbgc, Color sfgc) {
		this.bgc = bgc;
		this.fgc = fgc;
		this.sbgc = sbgc;
		this.sfgc = sfgc;		
	}
	
	
	/**
	 * Creates new form ProductoCellRender
	 */
	public ProductoCellRender() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreLabel = new javax.swing.JLabel();
        descripcionLabel = new javax.swing.JLabel();
        precioLabel = new javax.swing.JLabel();
        codigoBarrasLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        nombreLabel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        nombreLabel.setText("NOMBRE");
        add(nombreLabel, java.awt.BorderLayout.CENTER);

        descripcionLabel.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        descripcionLabel.setText("PRESENTACIÃ“N");
        add(descripcionLabel, java.awt.BorderLayout.SOUTH);

        precioLabel.setText("CONTENIDO");
        add(precioLabel, java.awt.BorderLayout.EAST);

        codigoBarrasLabel.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        codigoBarrasLabel.setText("|| || | | ||| | |||| ||||| || |");
        add(codigoBarrasLabel, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel codigoBarrasLabel;
    private javax.swing.JLabel descripcionLabel;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JLabel precioLabel;
    // End of variables declaration//GEN-END:variables

	@Override
	public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		ProductoCellRender pcr= new ProductoCellRender();
		
		PedidoVentaDetalleTableItem dvti = (PedidoVentaDetalleTableItem)value;
		Producto p=dvti.getProducto();
		
		pcr.codigoBarrasLabel.setText(p.getCodigoBarras().toUpperCase());
		Color almacenColor = fgc;
		if(dvti.getTipoAlmacen() == Constants.ALMACEN_PRINCIPAL){
			pcr.codigoBarrasLabel.setText("["+p.getCodigoBarras().toUpperCase()+"]");
			almacenColor = fgc;
		} else if(dvti.getTipoAlmacen() == Constants.ALMACEN_OPORTUNIDAD){
			pcr.codigoBarrasLabel.setText("("+p.getCodigoBarras().toUpperCase()+")");
			almacenColor = Color.RED;
		} else if(dvti.getTipoAlmacen() == Constants.ALMACEN_REGALIAS){
			pcr.codigoBarrasLabel.setText("{"+p.getCodigoBarras().toUpperCase()+"}");
			almacenColor = Color.GRAY;
		}
		
		pcr.nombreLabel.setText(p.getNombre().toUpperCase());		
		pcr.descripcionLabel.setText(p.getPresentacion().toUpperCase());
		pcr.precioLabel.setText(p.getContenido()+p.getUnidadMedida());
		
		if(isSelected){
			pcr.setBackground(sbgc!=null?sbgc:Color.MAGENTA);
			//pcr.setForeground(sfgc!=null?sbgc:Color.BLACK);			
		} else {
			pcr.setBackground(bgc!=null?bgc:Color.WHITE);
			//pcr.setForeground(fgc!=null?bgc:Color.BLACK);
		}
		
		pcr.setForeground(almacenColor);			
		
		if(hasFocus){			
			pcr.setBorder(new LineBorder(sbgc!=null?sbgc:Color.MAGENTA, 1, false));
		}
		
		return pcr;
	}
}
