/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pmarlen.caja.view;

import com.pmarlen.model.GeneradorDeToken;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JTextField;
import org.apache.log4j.Logger;

/**
 *
 * @author alfredo
 */
public class TokenFrame extends javax.swing.JDialog {

	private static Logger logger = Logger.getLogger(TokenFrame.class.getName());

	private boolean accepted;
	
	private int     intentos = 0;

	class ImagePanel extends JComponent {

		private Image image;

		public ImagePanel(Image image) {
			this.image = image;
		}

		@Override
		protected void paintComponent(Graphics g) {
			super.paintComponent(g);
			g.drawImage(image, getWidth()/2-image.getWidth(null)/2, getHeight()/2-image.getHeight(null)/2, this);
		}
	}

	public class TransparentJTextField extends JTextField {

		public TransparentJTextField() {
			super("");
			init();
		}

		public TransparentJTextField(String text) {
			super(text);
			init();
		}

		public TransparentJTextField(int columns) {
			super(columns);
			init();
		}

		public TransparentJTextField(String text, int columns) {
			super(text, columns);
			init();
		}

		protected void init() {
			setOpaque(false);
		}

		@Override
		public void paint(Graphics g) {
			Graphics2D g2d = (Graphics2D) g.create();
			//g2d.setComposite(AlphaComposite.DstOver.derive(0.5f));
			g2d.setComposite(AlphaComposite.SrcOver.derive(0.9f));
			
			super.paint(g2d);
			g2d.dispose();
		}

		@Override
		protected void paintComponent(Graphics g) {
			Graphics2D g2d = (Graphics2D) g.create();
			g2d.setColor(getBackground());
			g2d.fillRect(0, 0, getWidth(), getHeight());
			super.paintComponent(g2d);
			g2d.dispose();
		}

	}

	// elsewhere
	BufferedImage myBGImage = null;

	private Image getBackGroundImage() throws IOException {
		return ImageIO.read(getClass().getResource("/images/security_bg3.jpg"));
	}

	/**
	 * Creates new form TokenFrame
	 */
	public TokenFrame(JFrame parent) {
		super(parent,true);
		accepted = false;
		try {
			setContentPane(new ImagePanel(getBackGroundImage()));
		} catch (IOException e) {

		}
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        generaFrase = new javax.swing.JButton();
        frase = new TransparentJTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        token = new TransparentJTextField();
        jPanel4 = new javax.swing.JPanel();
        status = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        aceptar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AUTORIZACIÃ“N POR TOKEN");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(4, 1));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 40));

        generaFrase.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        generaFrase.setText("OBTENER FRASE :");
        generaFrase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaFraseActionPerformed(evt);
            }
        });
        jPanel1.add(generaFrase);

        frase.setEditable(false);
        frase.setColumns(5);
        frase.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        frase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        frase.setOpaque(false);
        jPanel1.add(frase);

        getContentPane().add(jPanel1);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("TOKEN:");
        jLabel8.setPreferredSize(new java.awt.Dimension(225, 32));
        jPanel2.add(jLabel8);

        token.setColumns(5);
        token.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        token.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        token.setEnabled(false);
        token.setOpaque(false);
        token.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tokenActionPerformed(evt);
            }
        });
        token.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tokenKeyTyped(evt);
            }
        });
        jPanel2.add(token);

        getContentPane().add(jPanel2);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20));

        status.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        status.setForeground(new java.awt.Color(255, 255, 255));
        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status.setText(" ");
        jPanel4.add(status);

        getContentPane().add(jPanel4);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 0));

        aceptar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        aceptar.setText("ACEPTAR");
        aceptar.setEnabled(false);
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });
        jPanel3.add(aceptar);

        cancelar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel3.add(cancelar);

        getContentPane().add(jPanel3);

        setSize(new java.awt.Dimension(696, 471));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generaFraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaFraseActionPerformed
		GeneradorDeToken gt = new GeneradorDeToken();
		frase.setText(gt.getFrase2());
		token.setText(null);
		token.setEnabled(true);
    }//GEN-LAST:event_generaFraseActionPerformed

    private void tokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tokenActionPerformed
		final String text = token.getText().trim();
		String fraseGenerada = frase.getText().trim();
		if (fraseGenerada.length()==0 || !text.matches("([0-9]){6}")) {
			logger.info(" X : " + text);
			token.setText(null);
			aceptar.setEnabled(false);
		} else {
			aceptar.setEnabled(true);
		}
    }//GEN-LAST:event_tokenActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
		String fraseGenerada = frase.getText().trim();
		String tokenEscrito = token.getText().trim();
		boolean cerrar=false;
		boolean borrarStatus=false;
		if(tokenEscrito.length() != 6){
			status.setText("INCORRECTO");
			status.setForeground(Color.RED);
			token.setText(null);
			token.requestFocus();
			aceptar.setEnabled(false);
			accepted = false;
			borrarStatus = true;
			if(++intentos >= 3){
				cerrar =  true;
			}
		} else{
		
			GeneradorDeToken gt = new GeneradorDeToken();
			String tokenObtenido = gt.getToken(fraseGenerada);

			if (!gt.isValid2(fraseGenerada, tokenEscrito)) {
				logger.info("invalido:tokenObtenido=" + tokenObtenido + ", tokenEscrito=" + tokenEscrito);
				status.setText("INCORRECTO");
				token.setText(null);
				aceptar.setEnabled(false);
				token.requestFocus();
				status.setForeground(Color.RED);
				accepted = false;
				borrarStatus = true;
				if(++intentos >= 3){
					cerrar =  true;
				}
			} else {
				logger.info("  valido:tokenObtenido=" + tokenObtenido + ", tokenEscrito=" + tokenEscrito);

				status.setText("CORRECTO");
				status.setForeground(Color.GREEN);
				cerrar = true;
				accepted = true;
				aceptar.setEnabled(false);
				token.setEnabled(false);
				cancelar.setEnabled(false);
			}
		}
		
		if(cerrar){
			new Thread(){
				public void run(){
					try{
						Thread.sleep(5000);
					}catch(InterruptedException e){
					}
					dispose();
				}
			}.start();
		}
		
		if(borrarStatus){
			new Thread(){
				public void run(){
					try{
						Thread.sleep(3000);
					}catch(InterruptedException e){
					}
					status.setText(null);
				}
			}.start();
		}
		
    }//GEN-LAST:event_aceptarActionPerformed

	
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
		dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void tokenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tokenKeyTyped
		char c = evt.getKeyChar();
		if (!((c >= '0') && (c <= '9')
				|| (c == KeyEvent.VK_BACK_SPACE)
				|| (c == KeyEvent.VK_DELETE))) {
			getToolkit().beep();
			evt.consume();
		}	
    }//GEN-LAST:event_tokenKeyTyped

	public boolean isAccepted() {
		return accepted;
	}

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField frase;
    private javax.swing.JButton generaFrase;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel status;
    private javax.swing.JTextField token;
    // End of variables declaration//GEN-END:variables
}
