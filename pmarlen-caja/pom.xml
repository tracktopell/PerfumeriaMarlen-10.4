<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.pmarlen.erp</groupId>
		<artifactId>pmarlen-parent</artifactId>
		<version>10.4.1</version>
	</parent>
	<artifactId>pmarlen-caja</artifactId>
	<version>10.4.1.75</version>
	<name>Perfumeria Marlen 10.4.x - Caja</name>
	
	<properties>
		<environment.log4j.rootLogger>INFO</environment.log4j.rootLogger>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.5.10</slf4j.version>
		<logback.version>0.9.15</logback.version>
		<junit.version>4.8.1</junit.version>		
		<maven.build.timestamp.format>yyyy/MM/dd_HH:mm</maven.build.timestamp.format>
		<maven_build_timestamp>${maven.build.timestamp}</maven_build_timestamp>
		<staging.dir>${project.build.directory}/staging</staging.dir>		
		<izpack-standalone.version>4.3.1</izpack-standalone.version>
		<finalJar.filename>${project.artifactId}-${project.version}</finalJar.filename>		
	</properties>
		
	<dependencies>
		<!-- ================= MAIN DEPENDENCIES ============ --> 
		
		<dependency>
			<groupId>com.pmarlen.erp</groupId>
			<artifactId>pmarlen-commons</artifactId>
			<version>10.4.1</version>
		</dependency>

		<!-- ================= LIBRARY DEPENDENCIES ============ --> 		
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.2</version>
		</dependency>
		
		<dependency>		
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		
		<dependency>
			<groupId>net.sf.bluecove</groupId>
			<artifactId>bluecove</artifactId>
			<!--        Win7_64
						<version>2.1.1-SNAPSHOT</version>
			-->
			<version>2.1.0</version>
		</dependency>

		<!-- If you plan to run application on Linux -->
		<dependency>
			<groupId>net.sf.bluecove</groupId>
			<artifactId>bluecove-gpl</artifactId>
			<!--        Win7_64
						<version>2.1.1-SNAPSHOT</version>
			-->
			<version>2.1.0</version>
			<scope>runtime</scope>
		</dependency>
		
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${project.jdk.version}</source>
					<target>${project.jdk.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.pmarlen.caja.Main</mainClass>
							<classpathPrefix>dependency-jars/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${staging.dir}/dependency-jars/</outputDirectory>
						</configuration>
					</execution>							
				</executions>	
			</plugin>		  
													
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>			
					<execution>
						<id>clean-my-dirty-space</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="======================= clean-my-dirty-space, in pre-clean phase ==============>>>"/>
								<delete quiet="true">
									<!--
									fileModel.zip CorteCajaDTO.json PMarlen.log4j.log system.properties
									-->
									<fileset dir="${basedir}" includes="fileModel.zip"/>
									<fileset dir="${basedir}" includes="data*.json"/>
									<fileset dir="${basedir}" includes="CorteCajaDTO*.json "/>
									<fileset dir="${basedir}" includes="EntradaSalida*.json "/>
									<fileset dir="${basedir}" includes="PML30-CAJA*"/>
									<fileset dir="${basedir}" includes="P*.log"/>
									<fileset dir="${basedir}" includes="TICKET*.txt"/>
									<fileset dir="${basedir}" includes="system.properties"/>
								</delete>
							</target>
						</configuration>
					</execution>
							
					<execution>
						<id>create-staging-area</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
								
						<configuration>
							<target>
								<echo message="======================= create-staging-area, in process-resources phase ==============>>>"/>
								<copy todir="${staging.dir}">
									<fileset dir="${basedir}/src/izpack" />
								</copy>
								<copy todir="${staging.dir}">
									<fileset file="${project.build.directory}/classes/Readme.txt" />
								</copy>
								<!--
								<copy todir="${staging.dir}/Productos">
									<fileset dir="${basedir}/Productos" />
								</copy>
								-->
							</target>
						</configuration>
					</execution>
					<execution>
						<id>preprare-bins-installer</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="======================= preprare-bins-installer , in package phase, basedir=${basedir}, create ZIP for UPDATE ==============>>>"/>
								<copy file="${project.build.directory}/${finalJar.filename}.jar" toFile="${project.build.directory}/${project.artifactId}.jar"/>
								<zip destfile="${project.build.directory}/update.zip">
									<!-- -->
									<zipfileset dir="${staging.dir}/dependency-jars"		prefix="dependency-jars/"	 includes="*.jar"/>
									<!-- -->
									<zipfileset dir="${project.build.directory}/classes/"	includes="run*.*"/>
									<zipfileset dir="${staging.dir}/../"					includes="${project.artifactId}.jar"/>
									
									<zipfileset dir="${basedir}/src/izpack"	includes="*.png"/>
									<zipfileset dir="${basedir}/src/izpack"	includes="*.desktop"/>
								</zip>
										
							</target>
						</configuration>
					</execution>

				</executions>
						
				<dependencies>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>
					
		</plugins>
	
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/izpack</directory>
				<filtering>true</filtering>
			</resource>

		</resources>
	
	</build>
	
	<profiles>		
		
		<profile>
			<id>installer</id>
			<properties>
				<environment.log4j.rootLogger>INFO</environment.log4j.rootLogger>
			</properties>
			<build>    
				<finalName>${finalJar.filename}</finalName>
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>upload-files</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="=======================ANT Task in install phase, preparing INSTALLER files : ${project.artifactId} ==============>>>"/>
										<copy file="${project.build.directory}/${finalJar.filename}.jar" tofile="${project.build.directory}/${project.artifactId}.jar"/>
										<copy file="${project.build.directory}/${finalJar.filename}-standard.jar" tofile="${project.build.directory}/${project.artifactId}-installer.jar"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>1.0-alpha-5</version>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>${izpack-standalone.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<izpackBasedir>${staging.dir}</izpackBasedir>
							<customPanelDirectory>${staging.dir}</customPanelDirectory>
						</configuration>
						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
				
			</build>
		</profile>

	</profiles>
	
</project>
